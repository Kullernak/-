# инструкция по работе с гит 
<!---выделение заголовка---> 

> блок цитирования 

**полужирный текст**
*курсивный текст*
***полужирный и курсивный текст***

<!--комментарий-->


# заголовки по уменьшению
## чем больше решеток тем меньше
### И меньше заголовок 

## Картинки

![упс картинки нет(](/33-288.jpg)


## нумерованый список

1. первый номер 
1. второй номер
    1. значение
    1. значение
1. третий номер


## маркированный список
- можно писать - или *
- работает по тому же принципу 
    - но без нумерации
    - а маркировки
-  точка


## список с выделительным блоком

> * задача 1
> * задача 2
> * задача 3

## кнопка действия 

> [нажми на клавишу я покажу тебе новый сайт](https://learn.microsoft.com/ru-ru/contribute/content/markdown-reference)

## подстрочные и надстрочные символы 

Привет <sub>это подстрочный текст!</sub>
Прощайте <sup>это надстрочный текст!</sup>

## таблицы в markdown

|у пети было | а Васе дали | сколько у них яблок?|
|:------------|:-------------:|---------:|
|5           |6            |11                   |
|20|20|40|
|1|2|3|



 # Команды git 
*git --version*  - проверка версии

*git init* -инициализация (отслеживание изменений)

*git add* - добавляет содержание каталога в индекс для последоюшего commit добавить ниже пример сокращенный 

*git commit -a(add) -m(messej)* " сохранение изменений 

*git diff* показывает разницу между текущим и сохраненным файлом 

*git log* просмотр изменений  

*git status* Показывает текущее состояние гита, есть 
ли изменения, которые нужно закоммитить

*git checkout* - Переключение между версиями. 

*git branch* (выбрать ветку)- просмотр, создание веток
чтобы удалить ветку нужно перед название поставить -d(deleted - перевод (git branch -d ...))

*git merge* (название ветки)- слияние веток с текущей

*git log --graph* - визуализация всех веток 

**git clone**(адрес репозитория) - клонирование репозитория для
работы в команде или ведение по своему развитию 

*git pull* - Эта команда позволяет скачать все 
из текущего репозитория и автоматически
сделать merge с нашей версией

***git push*** - Отправить свою версию репозитория во
внешний репозиторий поможет команда 
git push. При первом её использовании нужна авторизация

![упс картинка не работает](/картинки/i%20(1).webp)



https://github.com/Kullernak/-
https://github.com/Kullernak/-
https://github.com/Kullernak/-
https://github.com/Kullernak/-
https://github.com/Kullernak/-
https://github.com/Kullernak/-
